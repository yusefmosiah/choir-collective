name: Build, Test and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9.12.3

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  backend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test backend
        working-directory: ./api
        run: |
          pip install pytest pytest-asyncio
          pytest

  anchor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9.12.3

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: metadaoproject/setup-anchor@v2
        with:
          anchor-version: "0.30.1"
          node-version: "20"
          solana-cli-version: "1.18.9"

      - name: Generate new keypair
        run: solana-keygen new --no-bip39-passphrase

      - name: Set solana target cluster to local
        run: solana config set --url http://localhost:8899

      - name: Build Anchor program
        run: pnpm run anchor build

      - name: Test Anchor program
        run: pnpm run test:anchor

  deploy:
    needs: [frontend-build, backend-build, anchor]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Frontend to Render
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"

      - name: Deploy Backend to Render
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_BACKEND }}
        run: |
          curl "$deploy_url"
